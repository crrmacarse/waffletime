import React, { Component } from 'react';
import './App.css';

import { GoogleApiWrapper } from 'google-maps-react';

import Navigation from './Components/Navigation';
import Home from './Components/Home';
import About from './Components/About';
import Waffles from './Components/Waffles';
import Events from './Components/Events';
import EventsInfo from './Components/Events-Info';
import Maps from './Components/Map';
import Franchise from './Components/Franchise';

class App extends Component {
  render() {
    return (
      <div className = "App">
        <Navigation />
        <div className = "container-fluid">
          <Home />
          <About />
          <Waffles />
          <Events />
          <EventsInfo />
          <Maps google = {this.props.google}/>
          <Franchise />
        </div>
      </div>
    );
  }
}

export default GoogleApiWrapper({
  apiKey: 'AIzaSyAJbpjI8KS7fzlHYDjIBeOL8TkPfEhXUSk'
})(App);



import React from 'react';

import waffywalking from './Layouts/img/waffy-walking.png';
import imgfooter from './Layouts/img/footer.png';

class Map extends React.Component{
  render(){
    return(
      <div id = "franchise-section" className = "row justify-content-sm-center">
        <div className = "col-xl-8 col-lg-8 col-md-8 col-xs-12 col-sm-12">
            <p className = "ml-5 h1">Waffle Time Franchise Package</p>
            <hr id = "waffle-line" className = "ml-5"/>
            <span id = "franchise-description">
                <p className = "ml-5 mb-0">Package Cost:</p>
                <p className = "ml-5 mb-3">P 250,000.00 (net of taxes)</p>
                <p className = "ml-5 mb-0">Security Deposit:</p>
                <p className = "ml-5 mb-3">P 50,000.00 - refundable upon expiration of the franchise agreement with no interest</p>
                <p className = "ml-5 mb-0">Renewal Fee: </p>
                <p className = "ml-5 mb-3">P 50,000.00</p>
                <p className = "ml-5 mb-0">Franchise Duration: </p>
                <p className = "ml-5 mb-3">Three (3) Years</p>
                <ul>
                  <h6 className = "ml-2">Package Inclusion</h6>

                  <li className = "ml-5">
                  Use of the Waffletime Trade Name Marks
                  </li>
                  <li className = "ml-5">
                  Business Operations System
                  </li>
                  <li className = "ml-5">
                  Mobilization Set-up
                  </li>
                  <li className = "ml-5">
                  Cart and Signage
                  </li>
                  <li className = "ml-5">
                  Equipment and Small Wares
                  </li>
                  <li className = "ml-5">
                  Marketing Support
                  </li>
                  <li className = "ml-5">
                  Operational and Technical Support
                  </li>
                </ul>
              <p className = "ml-5">
                <span className="oi oi-data-transfer-download"></span>
                <a href = "/" className = "ml-1"> Franchise package PDF Format </a>
              </p>
              <div id = "contact-section">
              <p className = "h5 ml-5 mt-4"><span className="oi oi-home"></span> &nbsp; Contact Information </p>
                <p className = "mb-1 ml-5 mt-4"><span className="oi oi-chevron-bottom"></span>&nbsp; Manila Office &nbsp; | &nbsp; # 69 C. Raymundo Avenue Brgy. Caniogan, Pasig City </p>
                <p className = "mb-1 ml-5"><span className="oi oi-chevron-bottom"></span>&nbsp; Iloilo Office &nbsp; | &nbsp; Door 5, Q.H.P. Building, Arsenal St. Iloilo City, 5000, Philippines</p>
                <p className = "mb-1 ml-5"><span className="oi oi-chevron-bottom"></span>&nbsp; Cebu Office &nbsp; | &nbsp; # 338-8G Victor Village, Tres De Abril, Punta Prinsesa, Labangon, Cebu City </p>
                <p className = "mb-1 ml-5"><span className="oi oi-chevron-bottom"></span>&nbsp; Cagayan de Oro Office &nbsp; | &nbsp; 3699 Las Piedras Village, Capisnon, Kauswagan, Cagayan De Oro City</p>
                <p className = "mb-4 ml-5"><span className="oi oi-chevron-bottom"></span>&nbsp; Davao Office &nbsp; | &nbsp; #32B Mariner St., Dopna Vincenta Village, Davao City </p>
                <p className = "ml-5 d-lg-inline d-md-inline d-xl-inline d-none">Waffle Time Inc., © All Rights Reserved 2018</p>
              </div>
          </span>
        </div>
        <div className = "col-xl-4 col-lg-4 col-md-4 col-xs-12 col-sm-12 mx-auto">
          <img src = {waffywalking} alt = "Walking Waffy" className = "img-fluid mt-5 ml-lg-0 ml-4 ml-md-0 ml-sm-5" />
          <p className = "h6 d-lg-none d-xl-none d-md-none d-sm-inline d-xs-inline mt-5  ml-md-0 ml-sm-5 text-center">Waffle Time Inc., © All Rights Reserved 2018</p>
        </div>
        <div className = "col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 no-padding">
        <div id = "footer-main">
          <img id = "footer" src = {imgfooter} alt = "Green Grasses! WAOW" className = "img-fluid" />
        </div>
        </div>
      </div>
    )
  }
}

export default Map;

_____________

MAPS

import React from 'react';
import ReactDOM from 'react-dom'

import wavycurve from './Layouts/img/wavy-curve-red.png';
import wavycurveblue from './Layouts/img/wavy-curve-blue.png';

import {
  withScriptjs,
  withGoogleMap,
  GoogleMap,
  Marker,
  google
} from "react-google-maps";

class Map extends React.Component{

  componentDidUpdate(){
    this.loadMap();
  }

  loadMap(){
    if(this.props && this.props.google)
    {
      const {google} = this.props;
      const maps = google.maps;

      const mapRef = this.refs.map;
      const node = ReactDOM.findDOMNode(mapRef);

      const MapConfig = Object.assign({}, {
          center: {lat: 10.7015003, lng: 122.5569132},
          zoom: 11,
          mapTypeId: 'roadMap'
      })

      this.map = new maps.Map(node, MapConfig);
    }
  }

  render(){

    const style = {
      width: '80vw',
      height: '75vh'
    }

    return(
      <div id = "map-section" className = "row">
      <img src = {wavycurve} className = "img-fluid wavycurve" alt = "Waffle blue curve"/>
        <span id = "expand-map">
          <div className = "col-xl-12 col-lg-12 col-md-12 col-xs-12 col-sm-12">
              <div ref="map" style={style}>

              loading map...
            </div>
          </div>

        </span>
      <img src = {wavycurveblue} className = "img-fluid wavy-curve" alt = "Waffle red curve" />
      </div>
    )
  }
}

export default Map;


_______________
About


<div id = "about-section" className = "row">
  <div className = "col-xl-8 col-lg-8 col-md-8 col-sm-12 col-xs-12">
    <ul className = "about-info list-inline ml-lg-5 ml-xl-5">
      <li className = "list-inline-item">
        <a href = "/" className = "h4 ml-2">> Our History</a>
      </li>
      <li className = "list-inline-item">
        <a href = "/" className = "h4 ml-2">> Mission and Vision</a>
      </li>
      <li className = "list-inline-item">
        <a href = "/" className = "h4 ml-2">> Be One of Us!</a>
      </li>
    </ul>
    <p className = "blockquote ml-5 mt-5 mr-5">
      Waffle Time started on September of 1998 in the province of
      Iloilo, Philippines as a simple business venture.
    </p>
    <p className = "blockquote ml-5 mt-3 mr-5">
      The first outlet was in The Atrium Mall, Gen. Luna St., Iloilo City.
      On June 2002, Waffle Time started to penetrate the Metro Manila market.
      After which, we opened outlets in Cebu, Cagayan De Oro and Davao.
    </p>
    <p className = "blockquote ml-5 mt-3 mr-5 mb-5">
      Waffle Time opened its door to franchising on March 2004. After then Waffle
      Time Outlets mushroomed all over the Philippine Islands. This proves on our
      popularity and acceptance by our customers of all ages. And we&apos;ll still
      be opening more outlets as we continue to deliver delicious, nutritious and
      reasonably-priced waffles to everyone.
    </p>
    <span id = "about-info-descript">
    </span>
  </div>
  <div className = "col-xl-4 col-lg-4 col-md-4 col-sm-12 col-xs-12">
    <img className = "img-fluid" src = {waffy} />
  </div>
</div>


import React from 'react';
import ReactDOM from 'react-dom'

import wavycurve from './Layouts/img/wavy-curve-red.png';
import wavycurveblue from './Layouts/img/wavy-curve-blue.png';
import { GoogleApiWrapper, InfoWindow, Map, Marker } from 'google-maps-react';

import Paper from '@material-ui/core/Paper';
import Typography from '@material-ui/core/Typography';
import { typography } from '@material-ui/core/styles';

class Maps extends React.Component{

  constructor(props){
    super(props);
    this.state = {
      showingInfoWindow: false,
      activeMarker: {},
      selectedPlace: {}
    }

    this.onMarkerClick = this.onMarkerClick.bind(this);
    this.onMapClick = this.onMapClick.bind(this);
  }

  onMarkerClick = (props, marker, e) => {
    this.state({
      selectedPlace: props,
      activeMarker: marker,
      showingInfoWindow: true
    });
  }

  onMapClick = (props) => {
    if(this.state.showingInfoWindow){
      this.setState({
        showingInfoWindow: false,
        activeMarker: null
      })
    }
  }

  render(){
    const style = {
      width: '50vw',
      height: '75vh',
      'marginLEft': 'auto',
      'marginRight': 'auto'
    }

    return(

      <div id = "map-section " className = "row">
          <div className = "col-xl-12 col-lg-12 col-md-12 col-xs-12 col-sm-12 px-0">
          <img src = {wavycurve} className = "img-fluid wavycurve map-wavycurve-top" alt = "Waffle blue curve"/>
          <div ref="map"  className = "" id = "map-size"   >
              <Map
                item
                xs = {12}
                style = {style}
                google = {this.props.google}
                onCLick = {this.onMapClick}
                zoom = {14}
                initialCenter = {{lat: 10.7202, lng: 122.5621}}
              >
              <Marker
                onClick = {this.onMarkerClick}
                title = {'Example'}
                position = {{lat: 10.7146, lng: 122.5516}}
                name = {'example'}
              />
              <InfoWindow
                marker = {this.state.activeMarker}
                visible = {this.state.showingInfoWindow}
              >
              <Paper>
              <Typography
                variant = 'headline'
                component = 'h4'
              >
                Hello
              </Typography>
              <Typography
            component = 'p'
          >
            98G Albe Dr Newark, DE 19702 <br />
            302-293-8627
          </Typography>
            </Paper>
            </InfoWindow>
            </Map>
          </div>
          <img src = {wavycurveblue} className = "img-fluid wavy-curve map-wavycurve-bottom" alt = "Waffle red curve" />
          </div>
      </div>
    )
  }
}

export default GoogleApiWrapper({
    api: (process.env.AIzaSyAJbpjI8KS7fzlHYDjIBeOL8TkPfEhXUSk)
})(Maps)



import React from 'react';
import ReactDOM from 'react-dom'

import wavycurve from './Layouts/img/wavy-curve-red.png';
import wavycurveblue from './Layouts/img/wavy-curve-blue.png';
import SearchBox from 'react-google-maps/lib/components/places/SearchBox';

import {
  withScriptjs,
  withGoogleMap,
  GoogleMap,
  Marker,
  google
} from "react-google-maps";

class Map extends React.Component{

  componentDidUpdate(){
    this.loadMap();
  }

  loadMap(){
    if(this.props && this.props.google)
    {
      const {google} = this.props;
      const maps = google.maps;

      const mapRef = this.refs.map;
      const node = ReactDOM.findDOMNode(mapRef);

      const MapConfig = Object.assign({}, {
          center: {lat: 10.7015003, lng: 122.5569132},
          zoom: 11,
          mapTypeId: 'roadMap'
      })

      this.map = new maps.Map(node, MapConfig);
    }
  }

  render(){

 const _ = require("lodash");
 const { compose, withProps, lifecycle } = require("recompose");

 const defaultMapOptions = {
    disableDefaultUI: true,
  };

const MapWithASearchBox = compose(
 withProps({
   googleMapURL: "https://maps.googleapis.com/maps/api/js?key=AIzaSyAJbpjI8KS7fzlHYDjIBeOL8TkPfEhXUSk&v=3.exp&libraries=geometry,drawing,places",
   loadingElement: <div style = {{ height: `90vh` }} />,
   containerElement: <div style = {{ height: `90vh` }} />,
   mapElement: <div style = {{ height: `90vh` }} />,
 }),
 lifecycle({
   componentWillMount() {
     const refs = {}

     this.setState({
       bounds: null,
       center: {
         lat: 41.9, lng: -87.624
       },
       markers: [],
       onMapMounted: ref => {
         refs.map = ref;
       },

       onBoundsChanged: () => {
         this.setState({
           bounds: refs.map.getBounds(),
           center: refs.map.getCenter(),
         })
       },
       onSearchBoxMounted: ref => {
         refs.searchBox = ref;
       },
       onPlacesChanged: () => {
         const places = refs.searchBox.getPlaces();
         const bounds = new google.maps.LatLngBounds();

         places.forEach(place => {
           if (place.geometry.viewport) {
             bounds.union(place.geometry.viewport)
           } else {
             bounds.extend(place.geometry.location)
           }
         });
         const nextMarkers = places.map(place => ({
           position: place.geometry.location,
         }));
         const nextCenter = _.get(nextMarkers, '0.position', this.state.center);

         this.setState({
           center: nextCenter,
           markers: nextMarkers,

         });

           },
         })
       },
     }),
     withScriptjs,
     withGoogleMap
    )(props =>
     <GoogleMap
       ref={props.onMapMounted}
       defaultZoom={14}
       center={{lat: 10.7202, lng: 122.5621 }}
       defaultOptions={defaultMapOptions}
       >
       {props.isMarkerShown && (
         <Marker position={{ lat: 10.7202, lng: 122.5621 }} />
       )}
      {props.isMarkerShowns && (
         <Marker position={{ lat: 10.7244, lng: 122.5573}} />
       )}
       {props.MarkerShowns && (
         <Marker position={{ lat: 10.7146, lng: 122.5516 }} />

       )}
       {props.MarkerShowns && (
         <Marker position={{ lat: 10.7259356, lng: 122.55376 }} />

       )}
       <SearchBox
         ref={props.onSearchBoxMounted}
         bounds={props.bounds}
         onPlacesChanged={props.onPlacesChanged}
       >
       </SearchBox>
       {props.markers.map((marker, index) =>
         <Marker key={index} position={marker.position} />
       )}

     </GoogleMap>
    );
    return(
      <div id = "map-section " className = "row">
          <div className = "col-xl-12 col-lg-12 col-md-12 col-xs-12 col-sm-12 px-0">
          <img src = {wavycurve} className = "img-fluid wavycurve map-wavycurve-top" alt = "Waffle blue curve"/>
          <div ref="map"  className = "" id = "map-size"   >
               <MapWithASearchBox isMarkerShowns isMarkerShown MarkerShowns/>
          </div>
          <img src = {wavycurveblue} className = "img-fluid wavy-curve map-wavycurve-bottom" alt = "Waffle red curve" />
          </div>


      </div>
    )
  }
}

export default Map;
